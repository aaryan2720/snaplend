
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://aklactzqyglyzkvwugjm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFrbGFjdHpxeWdseXprdnd1Z2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI3MDE0NjIsImV4cCI6MjA1ODI3NzQ2Mn0.afOHXyKjdpGvI2MzHMr6hcwalGGukwSXG96WDprjbjY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true
  }
});

// Helper function to get URLs for Supabase Storage
export const getStorageUrl = (bucket: string, path: string): string => {
  // Check if path is already a full URL
  if (path && (path.startsWith('http://') || path.startsWith('https://'))) {
    return path;
  }
  
  // Handle empty paths
  if (!path) {
    return `${SUPABASE_URL}/storage/v1/object/public/${bucket}/placeholder.jpg`;
  }
  
  // Remove 'listings/' prefix if present to prevent double prefixing
  const cleanPath = path.startsWith('listings/') ? path.replace('listings/', '') : path;
  
  // Return the complete storage URL
  return `${SUPABASE_URL}/storage/v1/object/public/${bucket}/${cleanPath}`;
};
